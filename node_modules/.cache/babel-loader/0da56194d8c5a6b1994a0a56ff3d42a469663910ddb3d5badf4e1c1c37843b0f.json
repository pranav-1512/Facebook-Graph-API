{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Documents\\\\Material\\\\facebook\\\\facebook-insights-app\\\\src\\\\components\\\\Insights.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Insights = ({ accessToken, pageId }) => {\n//   const [insights, setInsights] = useState(null);\n\n//   useEffect(() => {\n//     const fetchInsights = async () => {\n//       try {\n//         const response = await axios.get(\n//           `https://graph.facebook.com/v13.0/${pageId}/insights?metric=page_fans,page_engaged_users,page_impressions,page_reactions_total&access_token=${accessToken}`\n//         );\n//         setInsights(response.data.data);\n//       } catch (error) {\n//         console.error('Error fetching insights:', error);\n//       }\n//     };\n//     fetchInsights();\n//   }, [accessToken, pageId]);\n\n//   if (!insights) {\n//     return null;\n//   }\n\n//   return (\n//     <div>\n//       <h2>Page Insights:</h2>\n//       <div>\n//         <h3>Total Followers / Fans: {insights[0].values[0].value}</h3>\n//         <h3>Total Engagement: {insights[1].values[0].value}</h3>\n//         <h3>Total Impressions: {insights[2].values[0].value}</h3>\n//         <h3>Total Reactions: {insights[3].values[0].value}</h3>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Insights;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Insights = ({\n  accessToken,\n  pageId\n}) => {\n  _s();\n  const [insights, setInsights] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchInsights = async () => {\n      setLoading(true);\n      try {\n        console.log(\"ACCESS TOKEN\", accessToken);\n        console.log(\"PAGE ID\", pageId);\n        // Fetch page access token first\n        const pageTokenResponse = await axios.get(`https://graph.facebook.com/v20.0/${pageId}?fields=access_token&access_token=${accessToken}`\n        //   `https://graph.facebook.com/v20.0/348968658304458?fields=access_token&access_token=$EAAX2AN7cH3oBO4CiHKBvkKW73kZC7oWB0eThZAT1QufByCQUZBDExZCYvWyjt7mGXfzd5sfm7ezYrVLzxkvZAhCKUvevqtjpsktJvL0o2ZClXNPK7BAd6AZAFLLS7J9AZAQOfdP0g4KNFTGZAX3tAinUbfbbJM4p2xf5aINd1aXZAcGztaSzaz6AYaQ3zxb9MGNOkIlOl11ZBKOGsbUA8ZAUY8tWgzAgiAZDZD`\n        );\n        const pageAccessToken = pageTokenResponse.data.access_token;\n        console.log(\"pageAccessToken\", pageAccessToken);\n\n        // Fetch each metric separately\n        const metrics = ['page_fans_count', 'page_engaged_users', 'page_impressions', 'page_reactions_total'];\n        const insightsData = await Promise.all(metrics.map(async metric => {\n          try {\n            const response = await axios.get(`https://graph.facebook.com/v20.0/${pageId}/insights`, {\n              params: {\n                metric: metric,\n                access_token: pageAccessToken,\n                period: 'day',\n                date_preset: 'last_30d'\n              }\n            });\n            return response.data.data[0];\n          } catch (error) {\n            console.warn(`Failed to fetch ${metric}:`, error.response ? error.response.data : error);\n            return {\n              name: metric,\n              values: [{\n                value: 'N/A'\n              }]\n            };\n          }\n        }));\n        setInsights(insightsData);\n        setError(null);\n      } catch (error) {\n        console.error('Error fetching insights:', error.response ? error.response.data : error);\n        setError('Failed to fetch insights. Please check permissions and try again.');\n        setInsights([]); // Set to empty array instead of null\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (pageId && accessToken) {\n      fetchInsights();\n    }\n  }, [accessToken, pageId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading insights...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }, this);\n  }\n  const getInsightValue = metricName => {\n    const metric = insights.find(insight => insight && insight.name === metricName);\n    return metric && metric.values && metric.values[0] ? metric.values[0].value : 'N/A';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-around',\n      flexWrap: 'wrap'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: \"Total Followers / Fans\",\n      value: getInsightValue('page_fans_count')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Total Engagement\",\n      value: getInsightValue('page_engaged_users')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Total Impressions\",\n      value: getInsightValue('page_impressions')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Total Reactions\",\n      value: getInsightValue('page_reactions_total')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(Insights, \"s5yBMWHmuGeuZdU7hHvRPTz38GE=\");\n_c = Insights;\nconst Card = ({\n  title,\n  value\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    padding: '10px',\n    margin: '10px',\n    minWidth: '200px'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 124,\n  columnNumber: 3\n}, this);\n_c2 = Card;\nexport default Insights;\nvar _c, _c2;\n$RefreshReg$(_c, \"Insights\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Insights","accessToken","pageId","_s","insights","setInsights","error","setError","loading","setLoading","fetchInsights","console","log","pageTokenResponse","get","pageAccessToken","data","access_token","metrics","insightsData","Promise","all","map","metric","response","params","period","date_preset","warn","name","values","value","children","fileName","_jsxFileName","lineNumber","columnNumber","getInsightValue","metricName","find","insight","style","display","justifyContent","flexWrap","Card","title","_c","border","borderRadius","padding","margin","minWidth","_c2","$RefreshReg$"],"sources":["C:/Users/prana/OneDrive/Documents/Material/facebook/facebook-insights-app/src/components/Insights.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Insights = ({ accessToken, pageId }) => {\r\n//   const [insights, setInsights] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchInsights = async () => {\r\n//       try {\r\n//         const response = await axios.get(\r\n//           `https://graph.facebook.com/v13.0/${pageId}/insights?metric=page_fans,page_engaged_users,page_impressions,page_reactions_total&access_token=${accessToken}`\r\n//         );\r\n//         setInsights(response.data.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching insights:', error);\r\n//       }\r\n//     };\r\n//     fetchInsights();\r\n//   }, [accessToken, pageId]);\r\n\r\n//   if (!insights) {\r\n//     return null;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Page Insights:</h2>\r\n//       <div>\r\n//         <h3>Total Followers / Fans: {insights[0].values[0].value}</h3>\r\n//         <h3>Total Engagement: {insights[1].values[0].value}</h3>\r\n//         <h3>Total Impressions: {insights[2].values[0].value}</h3>\r\n//         <h3>Total Reactions: {insights[3].values[0].value}</h3>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Insights;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Insights = ({ accessToken, pageId }) => {\r\n  const [insights, setInsights] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchInsights = async () => {\r\n      setLoading(true);\r\n      try {\r\n        console.log(\"ACCESS TOKEN\",accessToken)\r\n        console.log(\"PAGE ID\",pageId);\r\n        // Fetch page access token first\r\n        const pageTokenResponse = await axios.get(\r\n          `https://graph.facebook.com/v20.0/${pageId}?fields=access_token&access_token=${accessToken}`\r\n        //   `https://graph.facebook.com/v20.0/348968658304458?fields=access_token&access_token=$EAAX2AN7cH3oBO4CiHKBvkKW73kZC7oWB0eThZAT1QufByCQUZBDExZCYvWyjt7mGXfzd5sfm7ezYrVLzxkvZAhCKUvevqtjpsktJvL0o2ZClXNPK7BAd6AZAFLLS7J9AZAQOfdP0g4KNFTGZAX3tAinUbfbbJM4p2xf5aINd1aXZAcGztaSzaz6AYaQ3zxb9MGNOkIlOl11ZBKOGsbUA8ZAUY8tWgzAgiAZDZD`\r\n        );\r\n        const pageAccessToken = pageTokenResponse.data.access_token;\r\n        console.log(\"pageAccessToken\",pageAccessToken)\r\n\r\n        // Fetch each metric separately\r\n        const metrics = ['page_fans_count', 'page_engaged_users', 'page_impressions', 'page_reactions_total'];\r\n        const insightsData = await Promise.all(metrics.map(async (metric) => {\r\n          try {\r\n            const response = await axios.get(\r\n              `https://graph.facebook.com/v20.0/${pageId}/insights`,\r\n              {\r\n                params: {\r\n                  metric: metric,\r\n                  access_token: pageAccessToken,\r\n                  period: 'day',\r\n                  date_preset: 'last_30d'\r\n                }\r\n              }\r\n            );\r\n            return response.data.data[0];\r\n          } catch (error) {\r\n            console.warn(`Failed to fetch ${metric}:`, error.response ? error.response.data : error);\r\n            return { name: metric, values: [{ value: 'N/A' }] };\r\n          }\r\n        }));\r\n\r\n        setInsights(insightsData);\r\n        setError(null);\r\n      } catch (error) {\r\n        console.error('Error fetching insights:', error.response ? error.response.data : error);\r\n        setError('Failed to fetch insights. Please check permissions and try again.');\r\n        setInsights([]); // Set to empty array instead of null\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    if (pageId && accessToken) {\r\n      fetchInsights();\r\n    }\r\n  }, [accessToken, pageId]);\r\n\r\n  if (loading) {\r\n    return <div>Loading insights...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  const getInsightValue = (metricName) => {\r\n    const metric = insights.find(insight => insight && insight.name === metricName);\r\n    return metric && metric.values && metric.values[0] ? metric.values[0].value : 'N/A';\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-around', flexWrap: 'wrap' }}>\r\n      <Card title=\"Total Followers / Fans\" value={getInsightValue('page_fans_count')} />\r\n      <Card title=\"Total Engagement\" value={getInsightValue('page_engaged_users')} />\r\n      <Card title=\"Total Impressions\" value={getInsightValue('page_impressions')} />\r\n      <Card title=\"Total Reactions\" value={getInsightValue('page_reactions_total')} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Card = ({ title, value }) => (\r\n  <div style={{ border: '1px solid #ccc', borderRadius: '5px', padding: '10px', margin: '10px', minWidth: '200px' }}>\r\n    <h3>{title}</h3>\r\n    <p>{value}</p>\r\n  </div>\r\n);\r\n\r\nexport default Insights;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}