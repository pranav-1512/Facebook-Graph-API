{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Documents\\\\Material\\\\facebook\\\\facebook-insights-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import Login from './components/Login';\n// import Profile from './components/Profile';\n// import PageSelector from './components/PageSelector';\n// import Insights from './components/Insights';\n\n// const App = () => {\n//   const [accessToken, setAccessToken] = useState('');\n//   const [user, setUser] = useState(null);\n//   const [selectedPage, setSelectedPage] = useState(null);\n\n//   const handleLogin = (token) => {\n//     setAccessToken(token);\n//     fetchUserProfile(token);\n//   };\n\n//   const fetchUserProfile = async (token) => {\n//     try {\n//       const response = await fetch(\n//         `https://graph.facebook.com/v13.0/me?fields=name,email,picture&access_token=${token}`\n//       );\n//       const data = await response.json();\n//       setUser(data);\n//     } catch (error) {\n//       console.error('Error fetching user profile:', error);\n//     }\n//   };\n\n//   const handlePageSelect = (pageId) => {\n//     setSelectedPage(pageId);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {!accessToken ? (\n//         <Login onLogin={handleLogin} />\n//       ) : (\n//         <>\n//           <Profile user={user} />\n//           <PageSelector accessToken={accessToken} onPageSelect={handlePageSelect} />\n//           {selectedPage && (\n//             <Insights accessToken={accessToken} pageId={selectedPage} />\n//           )}\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login';\nimport Profile from './components/Profile';\nimport PageSelector from './components/PageSelector';\nimport Insights from './components/Insights';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [accessToken, setAccessToken] = useState('');\n  const [user, setUser] = useState(null);\n  const [selectedPage, setSelectedPage] = useState(null);\n  const handleLogin = token => {\n    setAccessToken(token);\n  };\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      if (!accessToken) return;\n      try {\n        const response = await fetch(`https://graph.facebook.com/v13.0/me?fields=name,email,picture&access_token=${accessToken}`);\n        const data = await response.json();\n        setUser(data);\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n      }\n    };\n    fetchUserProfile();\n  }, [accessToken]);\n  const handlePageSelect = pageId => {\n    setSelectedPage(pageId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !accessToken ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Profile, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PageSelector, {\n        accessToken: accessToken,\n        onPageSelect: handlePageSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), selectedPage && /*#__PURE__*/_jsxDEV(Insights, {\n        accessToken: accessToken,\n        pageId: selectedPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nlFQMfI8t6IKnSrAPn6o2nYej7E=\");\n_c = App;\nexport default App;\n\n// import React, { useState } from 'react';\n// import FacebookLogin from 'react-facebook-login';\n// import axios from 'axios';\n\n// function App() {\n//   const [user, setUser] = useState(null);\n//   const [pages, setPages] = useState([]);\n//   const [selectedPage, setSelectedPage] = useState('');\n//   const [insights, setInsights] = useState(null);\n//   const [dateRange, setDateRange] = useState({ since: '', until: '' });\n\n//   const responseFacebook = async (response) => {\n//     setUser(response);\n//     if (response.accessToken) {\n//       const pagesResponse = await axios.get(`https://graph.facebook.com/v13.0/me/accounts?access_token=${response.accessToken}`);\n//       setPages(pagesResponse.data.data);\n//     }\n//   };\n\n//   const handlePageSelect = (e) => {\n//     setSelectedPage(e.target.value);\n//   };\n\n//   const handleDateChange = (e) => {\n//     setDateRange({ ...dateRange, [e.target.name]: e.target.value });\n//   };\n\n//   const fetchInsights = async () => {\n//     if (!selectedPage || !dateRange.since || !dateRange.until) return;\n\n//     const page = pages.find(p => p.id === selectedPage);\n//     const insightsResponse = await axios.get(`https://graph.facebook.com/v13.0/${selectedPage}/insights`, {\n//       params: {\n//         metric: 'page_fans,page_engaged_users,page_impressions,page_reactions_total',\n//         access_token: page.access_token,\n//         period: 'day',\n//         since: dateRange.since,\n//         until: dateRange.until,\n//       }\n//     });\n\n//     const processedInsights = insightsResponse.data.data.reduce((acc, insight) => {\n//       acc[insight.name] = insight.values.reduce((sum, value) => sum + value.value, 0);\n//       return acc;\n//     }, {});\n\n//     setInsights(processedInsights);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {!user ? (\n//         <FacebookLogin\n//           appId=\"1677858482954106\"\n//           autoLoad={false}\n//           fields=\"name,email,picture\"\n//           callback={responseFacebook}\n//         />\n//       ) : (\n//         <div>\n//           <h2>Welcome, {user.name}!</h2>\n//           <img src={user.picture.data.url} alt=\"Profile\" />\n\n//           <h3>Select a Page:</h3>\n//           <select onChange={handlePageSelect}>\n//             <option value=\"\">Select a page</option>\n//             {pages.map(page => (\n//               <option key={page.id} value={page.id}>{page.name}</option>\n//             ))}\n//           </select>\n\n//           <h3>Select Date Range:</h3>\n//           <input type=\"date\" name=\"since\" onChange={handleDateChange} />\n//           <input type=\"date\" name=\"until\" onChange={handleDateChange} />\n\n//           <button onClick={fetchInsights}>Get Insights</button>\n\n//           {insights && (\n//             <div>\n//               <h3>Page Insights:</h3>\n//               <div>Total Followers: {insights.page_fans}</div>\n//               <div>Total Engagement: {insights.page_engaged_users}</div>\n//               <div>Total Impressions: {insights.page_impressions}</div>\n//               <div>Total Reactions: {insights.page_reactions_total}</div>\n//             </div>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Profile","PageSelector","Insights","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","accessToken","setAccessToken","user","setUser","selectedPage","setSelectedPage","handleLogin","token","fetchUserProfile","response","fetch","data","json","error","console","handlePageSelect","pageId","className","children","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onPageSelect","_c","$RefreshReg$"],"sources":["C:/Users/prana/OneDrive/Documents/Material/facebook/facebook-insights-app/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import Login from './components/Login';\n// import Profile from './components/Profile';\n// import PageSelector from './components/PageSelector';\n// import Insights from './components/Insights';\n\n// const App = () => {\n//   const [accessToken, setAccessToken] = useState('');\n//   const [user, setUser] = useState(null);\n//   const [selectedPage, setSelectedPage] = useState(null);\n\n//   const handleLogin = (token) => {\n//     setAccessToken(token);\n//     fetchUserProfile(token);\n//   };\n\n//   const fetchUserProfile = async (token) => {\n//     try {\n//       const response = await fetch(\n//         `https://graph.facebook.com/v13.0/me?fields=name,email,picture&access_token=${token}`\n//       );\n//       const data = await response.json();\n//       setUser(data);\n//     } catch (error) {\n//       console.error('Error fetching user profile:', error);\n//     }\n//   };\n\n//   const handlePageSelect = (pageId) => {\n//     setSelectedPage(pageId);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {!accessToken ? (\n//         <Login onLogin={handleLogin} />\n//       ) : (\n//         <>\n//           <Profile user={user} />\n//           <PageSelector accessToken={accessToken} onPageSelect={handlePageSelect} />\n//           {selectedPage && (\n//             <Insights accessToken={accessToken} pageId={selectedPage} />\n//           )}\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from 'react';\nimport Login from './components/Login';\nimport Profile from './components/Profile';\nimport PageSelector from './components/PageSelector';\nimport Insights from './components/Insights';\n\nconst App = () => {\n  const [accessToken, setAccessToken] = useState('');\n  const [user, setUser] = useState(null);\n  const [selectedPage, setSelectedPage] = useState(null);\n\n  const handleLogin = (token) => {\n    setAccessToken(token);\n  };\n\n  useEffect(() => {\n    const fetchUserProfile = async () => {\n      if (!accessToken) return;\n\n      try {\n        const response = await fetch(\n          `https://graph.facebook.com/v13.0/me?fields=name,email,picture&access_token=${accessToken}`\n        );\n        const data = await response.json();\n        setUser(data);\n      } catch (error) {\n        console.error('Error fetching user profile:', error);\n      }\n    };\n\n    fetchUserProfile();\n  }, [accessToken]);\n\n  const handlePageSelect = (pageId) => {\n    setSelectedPage(pageId);\n  };\n\n  return (\n    <div className=\"App\">\n      {!accessToken ? (\n        <Login onLogin={handleLogin} />\n      ) : (\n        <>\n          <Profile user={user} />\n          <PageSelector accessToken={accessToken} onPageSelect={handlePageSelect} />\n          {selectedPage && (\n            <Insights accessToken={accessToken} pageId={selectedPage} />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n// import React, { useState } from 'react';\n// import FacebookLogin from 'react-facebook-login';\n// import axios from 'axios';\n\n// function App() {\n//   const [user, setUser] = useState(null);\n//   const [pages, setPages] = useState([]);\n//   const [selectedPage, setSelectedPage] = useState('');\n//   const [insights, setInsights] = useState(null);\n//   const [dateRange, setDateRange] = useState({ since: '', until: '' });\n\n//   const responseFacebook = async (response) => {\n//     setUser(response);\n//     if (response.accessToken) {\n//       const pagesResponse = await axios.get(`https://graph.facebook.com/v13.0/me/accounts?access_token=${response.accessToken}`);\n//       setPages(pagesResponse.data.data);\n//     }\n//   };\n\n//   const handlePageSelect = (e) => {\n//     setSelectedPage(e.target.value);\n//   };\n\n//   const handleDateChange = (e) => {\n//     setDateRange({ ...dateRange, [e.target.name]: e.target.value });\n//   };\n\n//   const fetchInsights = async () => {\n//     if (!selectedPage || !dateRange.since || !dateRange.until) return;\n\n//     const page = pages.find(p => p.id === selectedPage);\n//     const insightsResponse = await axios.get(`https://graph.facebook.com/v13.0/${selectedPage}/insights`, {\n//       params: {\n//         metric: 'page_fans,page_engaged_users,page_impressions,page_reactions_total',\n//         access_token: page.access_token,\n//         period: 'day',\n//         since: dateRange.since,\n//         until: dateRange.until,\n//       }\n//     });\n\n//     const processedInsights = insightsResponse.data.data.reduce((acc, insight) => {\n//       acc[insight.name] = insight.values.reduce((sum, value) => sum + value.value, 0);\n//       return acc;\n//     }, {});\n\n//     setInsights(processedInsights);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {!user ? (\n//         <FacebookLogin\n//           appId=\"1677858482954106\"\n//           autoLoad={false}\n//           fields=\"name,email,picture\"\n//           callback={responseFacebook}\n//         />\n//       ) : (\n//         <div>\n//           <h2>Welcome, {user.name}!</h2>\n//           <img src={user.picture.data.url} alt=\"Profile\" />\n          \n//           <h3>Select a Page:</h3>\n//           <select onChange={handlePageSelect}>\n//             <option value=\"\">Select a page</option>\n//             {pages.map(page => (\n//               <option key={page.id} value={page.id}>{page.name}</option>\n//             ))}\n//           </select>\n\n//           <h3>Select Date Range:</h3>\n//           <input type=\"date\" name=\"since\" onChange={handleDateChange} />\n//           <input type=\"date\" name=\"until\" onChange={handleDateChange} />\n\n//           <button onClick={fetchInsights}>Get Insights</button>\n\n//           {insights && (\n//             <div>\n//               <h3>Page Insights:</h3>\n//               <div>Total Followers: {insights.page_fans}</div>\n//               <div>Total Engagement: {insights.page_engaged_users}</div>\n//               <div>Total Impressions: {insights.page_impressions}</div>\n//               <div>Total Reactions: {insights.page_reactions_total}</div>\n//             </div>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}