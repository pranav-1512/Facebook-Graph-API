{"ast":null,"code":"// import React, { useState } from 'react';\n// import Login from './components/Login';\n// import Profile from './components/Profile';\n// import PageSelector from './components/PageSelector';\n// import Insights from './components/Insights';\n\n// const App = () => {\n//   const [accessToken, setAccessToken] = useState('');\n//   const [user, setUser] = useState(null);\n//   const [selectedPage, setSelectedPage] = useState(null);\n\n//   const handleLogin = (token) => {\n//     setAccessToken(token);\n//     fetchUserProfile(token);\n//   };\n\n//   const fetchUserProfile = async (token) => {\n//     try {\n//       const response = await fetch(\n//         `https://graph.facebook.com/v13.0/me?fields=name,email,picture&access_token=${token}`\n//       );\n//       const data = await response.json();\n//       setUser(data);\n//     } catch (error) {\n//       console.error('Error fetching user profile:', error);\n//     }\n//   };\n\n//   const handlePageSelect = (pageId) => {\n//     setSelectedPage(pageId);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {!accessToken ? (\n//         <Login onLogin={handleLogin} />\n//       ) : (\n//         <>\n//           <Profile user={user} />\n//           <PageSelector accessToken={accessToken} onPageSelect={handlePageSelect} />\n//           {selectedPage && (\n//             <Insights accessToken={accessToken} pageId={selectedPage} />\n//           )}\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// import React, { useState } from 'react';\n// import FacebookLogin from 'react-facebook-login';\n// import axios from 'axios';\n\n// function App() {\n//   const [user, setUser] = useState(null);\n//   const [pages, setPages] = useState([]);\n//   const [selectedPage, setSelectedPage] = useState('');\n//   const [insights, setInsights] = useState(null);\n//   const [dateRange, setDateRange] = useState({ since: '', until: '' });\n\n//   const responseFacebook = async (response) => {\n//     setUser(response);\n//     if (response.accessToken) {\n//       const pagesResponse = await axios.get(`https://graph.facebook.com/v13.0/me/accounts?access_token=${response.accessToken}`);\n//       setPages(pagesResponse.data.data);\n//     }\n//   };\n\n//   const handlePageSelect = (e) => {\n//     setSelectedPage(e.target.value);\n//   };\n\n//   const handleDateChange = (e) => {\n//     setDateRange({ ...dateRange, [e.target.name]: e.target.value });\n//   };\n\n//   const fetchInsights = async () => {\n//     if (!selectedPage || !dateRange.since || !dateRange.until) return;\n\n//     const page = pages.find(p => p.id === selectedPage);\n//     const insightsResponse = await axios.get(`https://graph.facebook.com/v13.0/${selectedPage}/insights`, {\n//       params: {\n//         metric: 'page_fans,page_engaged_users,page_impressions,page_reactions_total',\n//         access_token: page.access_token,\n//         period: 'day',\n//         since: dateRange.since,\n//         until: dateRange.until,\n//       }\n//     });\n\n//     const processedInsights = insightsResponse.data.data.reduce((acc, insight) => {\n//       acc[insight.name] = insight.values.reduce((sum, value) => sum + value.value, 0);\n//       return acc;\n//     }, {});\n\n//     setInsights(processedInsights);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {!user ? (\n//         <FacebookLogin\n//           appId=\"1677858482954106\"\n//           autoLoad={false}\n//           fields=\"name,email,picture\"\n//           callback={responseFacebook}\n//         />\n//       ) : (\n//         <div>\n//           <h2>Welcome, {user.name}!</h2>\n//           <img src={user.picture.data.url} alt=\"Profile\" />\n\n//           <h3>Select a Page:</h3>\n//           <select onChange={handlePageSelect}>\n//             <option value=\"\">Select a page</option>\n//             {pages.map(page => (\n//               <option key={page.id} value={page.id}>{page.name}</option>\n//             ))}\n//           </select>\n\n//           <h3>Select Date Range:</h3>\n//           <input type=\"date\" name=\"since\" onChange={handleDateChange} />\n//           <input type=\"date\" name=\"until\" onChange={handleDateChange} />\n\n//           <button onClick={fetchInsights}>Get Insights</button>\n\n//           {insights && (\n//             <div>\n//               <h3>Page Insights:</h3>\n//               <div>Total Followers: {insights.page_fans}</div>\n//               <div>Total Engagement: {insights.page_engaged_users}</div>\n//               <div>Total Impressions: {insights.page_impressions}</div>\n//               <div>Total Reactions: {insights.page_reactions_total}</div>\n//             </div>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/prana/OneDrive/Documents/Material/facebook/facebook-insights-app/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import Login from './components/Login';\n// import Profile from './components/Profile';\n// import PageSelector from './components/PageSelector';\n// import Insights from './components/Insights';\n\n// const App = () => {\n//   const [accessToken, setAccessToken] = useState('');\n//   const [user, setUser] = useState(null);\n//   const [selectedPage, setSelectedPage] = useState(null);\n\n//   const handleLogin = (token) => {\n//     setAccessToken(token);\n//     fetchUserProfile(token);\n//   };\n\n//   const fetchUserProfile = async (token) => {\n//     try {\n//       const response = await fetch(\n//         `https://graph.facebook.com/v13.0/me?fields=name,email,picture&access_token=${token}`\n//       );\n//       const data = await response.json();\n//       setUser(data);\n//     } catch (error) {\n//       console.error('Error fetching user profile:', error);\n//     }\n//   };\n\n//   const handlePageSelect = (pageId) => {\n//     setSelectedPage(pageId);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {!accessToken ? (\n//         <Login onLogin={handleLogin} />\n//       ) : (\n//         <>\n//           <Profile user={user} />\n//           <PageSelector accessToken={accessToken} onPageSelect={handlePageSelect} />\n//           {selectedPage && (\n//             <Insights accessToken={accessToken} pageId={selectedPage} />\n//           )}\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n// import React, { useState } from 'react';\n// import FacebookLogin from 'react-facebook-login';\n// import axios from 'axios';\n\n// function App() {\n//   const [user, setUser] = useState(null);\n//   const [pages, setPages] = useState([]);\n//   const [selectedPage, setSelectedPage] = useState('');\n//   const [insights, setInsights] = useState(null);\n//   const [dateRange, setDateRange] = useState({ since: '', until: '' });\n\n//   const responseFacebook = async (response) => {\n//     setUser(response);\n//     if (response.accessToken) {\n//       const pagesResponse = await axios.get(`https://graph.facebook.com/v13.0/me/accounts?access_token=${response.accessToken}`);\n//       setPages(pagesResponse.data.data);\n//     }\n//   };\n\n//   const handlePageSelect = (e) => {\n//     setSelectedPage(e.target.value);\n//   };\n\n//   const handleDateChange = (e) => {\n//     setDateRange({ ...dateRange, [e.target.name]: e.target.value });\n//   };\n\n//   const fetchInsights = async () => {\n//     if (!selectedPage || !dateRange.since || !dateRange.until) return;\n\n//     const page = pages.find(p => p.id === selectedPage);\n//     const insightsResponse = await axios.get(`https://graph.facebook.com/v13.0/${selectedPage}/insights`, {\n//       params: {\n//         metric: 'page_fans,page_engaged_users,page_impressions,page_reactions_total',\n//         access_token: page.access_token,\n//         period: 'day',\n//         since: dateRange.since,\n//         until: dateRange.until,\n//       }\n//     });\n\n//     const processedInsights = insightsResponse.data.data.reduce((acc, insight) => {\n//       acc[insight.name] = insight.values.reduce((sum, value) => sum + value.value, 0);\n//       return acc;\n//     }, {});\n\n//     setInsights(processedInsights);\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       {!user ? (\n//         <FacebookLogin\n//           appId=\"1677858482954106\"\n//           autoLoad={false}\n//           fields=\"name,email,picture\"\n//           callback={responseFacebook}\n//         />\n//       ) : (\n//         <div>\n//           <h2>Welcome, {user.name}!</h2>\n//           <img src={user.picture.data.url} alt=\"Profile\" />\n          \n//           <h3>Select a Page:</h3>\n//           <select onChange={handlePageSelect}>\n//             <option value=\"\">Select a page</option>\n//             {pages.map(page => (\n//               <option key={page.id} value={page.id}>{page.name}</option>\n//             ))}\n//           </select>\n\n//           <h3>Select Date Range:</h3>\n//           <input type=\"date\" name=\"since\" onChange={handleDateChange} />\n//           <input type=\"date\" name=\"until\" onChange={handleDateChange} />\n\n//           <button onClick={fetchInsights}>Get Insights</button>\n\n//           {insights && (\n//             <div>\n//               <h3>Page Insights:</h3>\n//               <div>Total Followers: {insights.page_fans}</div>\n//               <div>Total Engagement: {insights.page_engaged_users}</div>\n//               <div>Total Impressions: {insights.page_impressions}</div>\n//               <div>Total Reactions: {insights.page_reactions_total}</div>\n//             </div>\n//           )}\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}