{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prana\\\\OneDrive\\\\Documents\\\\Material\\\\facebook\\\\facebook-insights-app\\\\src\\\\components\\\\Insights.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const Insights = ({ accessToken, pageId }) => {\n//   const [insights, setInsights] = useState(null);\n\n//   useEffect(() => {\n//     const fetchInsights = async () => {\n//       try {\n//         const response = await axios.get(\n//           `https://graph.facebook.com/v13.0/${pageId}/insights?metric=page_fans,page_engaged_users,page_impressions,page_reactions_total&access_token=${accessToken}`\n//         );\n//         setInsights(response.data.data);\n//       } catch (error) {\n//         console.error('Error fetching insights:', error);\n//       }\n//     };\n//     fetchInsights();\n//   }, [accessToken, pageId]);\n\n//   if (!insights) {\n//     return null;\n//   }\n\n//   return (\n//     <div>\n//       <h2>Page Insights:</h2>\n//       <div>\n//         <h3>Total Followers / Fans: {insights[0].values[0].value}</h3>\n//         <h3>Total Engagement: {insights[1].values[0].value}</h3>\n//         <h3>Total Impressions: {insights[2].values[0].value}</h3>\n//         <h3>Total Reactions: {insights[3].values[0].value}</h3>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Insights;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Insights = ({\n  accessToken,\n  pageId\n}) => {\n  _s();\n  const [insights, setInsights] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchInsights = async () => {\n      try {\n        // Fetch page access token first\n        const pageTokenResponse = await axios.get(`https://graph.facebook.com/v13.0/${pageId}?fields=access_token&access_token=${accessToken}`);\n        const pageAccessToken = pageTokenResponse.data.access_token;\n\n        // Use page access token to fetch insights\n        const insightsResponse = await axios.get(`https://graph.facebook.com/v13.0/${pageId}/insights`, {\n          params: {\n            metric: 'page_fans_count,page_engaged_users,page_impressions,page_reactions_total',\n            access_token: pageAccessToken,\n            period: 'day',\n            date_preset: 'last_30d'\n          }\n        });\n        setInsights(insightsResponse.data.data);\n        setError(null);\n      } catch (error) {\n        console.error('Error fetching insights:', error);\n        setError('Failed to fetch insights. Please check permissions and try again.');\n      }\n    };\n    if (pageId && accessToken) {\n      fetchInsights();\n    }\n  }, [accessToken, pageId]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  if (!insights) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading insights...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n  const getInsightValue = metricName => {\n    const metric = insights.find(insight => insight.name === metricName);\n    return metric ? metric.values[0].value : 'N/A';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-around',\n      flexWrap: 'wrap'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      title: \"Total Followers / Fans\",\n      value: getInsightValue('page_fans_count')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Total Engagement\",\n      value: getInsightValue('page_engaged_users')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Total Impressions\",\n      value: getInsightValue('page_impressions')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      title: \"Total Reactions\",\n      value: getInsightValue('page_reactions_total')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Insights, \"IMEPoTlgNWPpIaXnF2bj8sdZIt4=\");\n_c = Insights;\nconst Card = ({\n  title,\n  value\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n    padding: '10px',\n    margin: '10px',\n    minWidth: '200px'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 105,\n  columnNumber: 3\n}, this);\n_c2 = Card;\nexport default Insights;\nvar _c, _c2;\n$RefreshReg$(_c, \"Insights\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Insights","accessToken","pageId","_s","insights","setInsights","error","setError","fetchInsights","pageTokenResponse","get","pageAccessToken","data","access_token","insightsResponse","params","metric","period","date_preset","console","children","fileName","_jsxFileName","lineNumber","columnNumber","getInsightValue","metricName","find","insight","name","values","value","style","display","justifyContent","flexWrap","Card","title","_c","border","borderRadius","padding","margin","minWidth","_c2","$RefreshReg$"],"sources":["C:/Users/prana/OneDrive/Documents/Material/facebook/facebook-insights-app/src/components/Insights.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const Insights = ({ accessToken, pageId }) => {\r\n//   const [insights, setInsights] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchInsights = async () => {\r\n//       try {\r\n//         const response = await axios.get(\r\n//           `https://graph.facebook.com/v13.0/${pageId}/insights?metric=page_fans,page_engaged_users,page_impressions,page_reactions_total&access_token=${accessToken}`\r\n//         );\r\n//         setInsights(response.data.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching insights:', error);\r\n//       }\r\n//     };\r\n//     fetchInsights();\r\n//   }, [accessToken, pageId]);\r\n\r\n//   if (!insights) {\r\n//     return null;\r\n//   }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>Page Insights:</h2>\r\n//       <div>\r\n//         <h3>Total Followers / Fans: {insights[0].values[0].value}</h3>\r\n//         <h3>Total Engagement: {insights[1].values[0].value}</h3>\r\n//         <h3>Total Impressions: {insights[2].values[0].value}</h3>\r\n//         <h3>Total Reactions: {insights[3].values[0].value}</h3>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Insights;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Insights = ({ accessToken, pageId }) => {\r\n  const [insights, setInsights] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchInsights = async () => {\r\n      try {\r\n        // Fetch page access token first\r\n        const pageTokenResponse = await axios.get(\r\n          `https://graph.facebook.com/v13.0/${pageId}?fields=access_token&access_token=${accessToken}`\r\n        );\r\n        const pageAccessToken = pageTokenResponse.data.access_token;\r\n\r\n        // Use page access token to fetch insights\r\n        const insightsResponse = await axios.get(\r\n          `https://graph.facebook.com/v13.0/${pageId}/insights`,\r\n          {\r\n            params: {\r\n              metric: 'page_fans_count,page_engaged_users,page_impressions,page_reactions_total',\r\n              access_token: pageAccessToken,\r\n              period: 'day',\r\n              date_preset: 'last_30d'\r\n            }\r\n          }\r\n        );\r\n        setInsights(insightsResponse.data.data);\r\n        setError(null);\r\n      } catch (error) {\r\n        console.error('Error fetching insights:', error);\r\n        setError('Failed to fetch insights. Please check permissions and try again.');\r\n      }\r\n    };\r\n    if (pageId && accessToken) {\r\n      fetchInsights();\r\n    }\r\n  }, [accessToken, pageId]);\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n\r\n  if (!insights) {\r\n    return <div>Loading insights...</div>;\r\n  }\r\n\r\n  const getInsightValue = (metricName) => {\r\n    const metric = insights.find(insight => insight.name === metricName);\r\n    return metric ? metric.values[0].value : 'N/A';\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-around', flexWrap: 'wrap' }}>\r\n      <Card title=\"Total Followers / Fans\" value={getInsightValue('page_fans_count')} />\r\n      <Card title=\"Total Engagement\" value={getInsightValue('page_engaged_users')} />\r\n      <Card title=\"Total Impressions\" value={getInsightValue('page_impressions')} />\r\n      <Card title=\"Total Reactions\" value={getInsightValue('page_reactions_total')} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Card = ({ title, value }) => (\r\n  <div style={{ border: '1px solid #ccc', borderRadius: '5px', padding: '10px', margin: '10px', minWidth: '200px' }}>\r\n    <h3>{title}</h3>\r\n    <p>{value}</p>\r\n  </div>\r\n);\r\n\r\nexport default Insights;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}